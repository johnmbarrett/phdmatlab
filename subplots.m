function [nRows,nCols] = subplots(nPlots,width,height)
    ugh = [ ...        
        1 1; ...
        1 2; ...
        2 2; ...
        2 2; ...
        2 3; ...
        2 3; ...
        2 4; ...
        2 4; ...
        3 3; ...
        3 4; ...
        3 4; ...
        3 4; ...
        3 5; ...
        3 5; ...
        3 5; ...
        4 4; ...
        4 5; ...
        4 5; ...
        4 5; ...
        4 5; ...
        3 7; ...
        4 6; ...
        4 6; ...
        4 6; ...
        5 5; ...
        5 6; ...
        5 6; ...
        5 6; ...
        5 6; ...
        5 6; ...
        5 7; ...
        5 7; ...
        5 7; ...
        5 7; ...
        5 7; ...
        5 8; ...
        5 8; ...
        5 8; ...
        5 8; ...
        5 8; ...
        6 7; ...
        6 7; ...
        5 9; ...
        5 9; ...
        5 9; ...
        6 8; ...
        6 8; ...
        6 8; ...
        6 9; ...
        6 9; ...
        6 9; ...
        6 9; ...
        6 9; ...
        6 9; ...
        7 8; ...
        7 8; ...
        6 10; ...
        6 10; ...
        6 10; ...
        6 10; ...
        8 8; ...
        8 8; ...
        8 8; ...
        8 8; ...
        8 9; ...
        8 9; ...
        8 9; ...
        8 9; ...
        8 9; ...
        8 9; ...
        8 9; ...
        8 9; ...
        8 10; ...
        8 10; ...
        8 10; ...
        8 10; ...
        8 10; ...
        8 10; ...
        8 10; ...
        8 10; ...
        9 9; ...
        8 11; ...
        8 11; ...
        8 11; ...
        8 11; ...
        8 11; ...
        8 11; ...
        8 11; ...
        9 10; ...
        9 10; ...
        8 12; ...
        8 12; ...
        8 12; ...
        8 12; ...
        8 12; ...
        8 12; ...
        10 10; ...
        10 10; ...
        10 10; ...
        10 10; ...
        ];
    
    ugh(256,:) = [16 16];
    
    ugh(288,:) = [18 16];
    
    nRows = ugh(nPlots,1);
    nCols = ugh(nPlots,2);
    
    if nargout == 1
        nRows = [nRows nCols];
    end

    return;

    if nargin == 2
        error 'Two numbers are required to define an aspect ratio';
    elseif nargin == 1
        width = 4;
        height = 3;
    else
        error 'You must specify a number of subplots';
    end
    
    aspectRatio = width/height;
    root = sqrt(nPlots);
    
    if aspectRatio >= 1
        rowRound = @floor;
        colRound = @ceil;
    else
        rowRound = @ceil;
        colRound = @floor;
    end
    
    nRows = max(1,rowRound(root/aspectRatio));
    nCols = max(1,colRound(root*aspectRatio));
    
    while nRows*nCols < nPlots
        if aspectRatio > 1
            nCols = nCols + 1;
        else
            nRows = nRows + 1;
        end
    end
    
%     if nRows*nCols > nPlots+nCols
%         nRows = nRows-1;
%     end
%     
%     if nRows*nCols > nPlots+nRows
%         nCols = nCols-1;
%     end
    
    return;
    
    if nPlots == 1
        nRows = 1;
        nCols = 1;
        return;
    end
    
    aspectRatio = width/height;
    
    [rows,cols] = meshgrid(1:nPlots,1:nPlots);
    plots = rows.*cols;
    ratios = cols./rows;
    
    excessPlots = plots-nPlots;
    excessPlots(excessPlots < 0) = NaN; % sort seems to put NaNs at the top, but this is undocumented behaviour so far as I can tell
    distortion = abs(ratios-aspectRatio);
    
    [~,bestRatios] = sort(reshape(distortion,numel(plots),1));
    bestRatios = bestRatios(~isnan(excessPlots(bestRatios)));
    
    excessPlots = excessPlots(bestRatios);
    
    plot(-excessPlots);
    [~,firstLocalMinimum] = findpeaks([-Inf; -excessPlots; -Inf],'NPEAKS',1);
    firstLocalMinimum = firstLocalMinimum-1;
    
    [nCols,nRows] = ind2sub(size(plots),bestRatios(firstLocalMinimum));
end